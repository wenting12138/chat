<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wen.im.api.mapper.MessageMapper">

    <select id="selectMessageByRoomId" resultType="com.wen.im.common.model.entity.Message">
        select
            id,
            room_id as roomId,
            from_uid as fromUid,
            content,
            reply_msg_id as replyMsgId,
            type,
            extra,
            status,
            gap_count as gapCount,
            create_time as createTime,
            update_time as updateTime
        from message
        where
            1 = 1
            and room_id = #{roomId}
            <if test="cursor != null and cursor > 0">
                AND id <![CDATA[ < ]]> #{cursor}
            </if>
        order by id desc
        limit #{pageSize}
    </select>
    
    <select id="selectUnReadCount" resultType="int">
        select count(1)
        from message
        where room_id = #{roomId} and create_time > #{readTime}
    </select>

    <select id="selectMessageByMsgId" resultType="com.wen.im.common.model.entity.Message">
        select
            id,
            room_id as roomId,
            from_uid as fromUid,
            content,
            reply_msg_id as replyMsgId,
            type,
            extra,
            status,
            gap_count as gapCount,
            create_time as createTime,
            update_time as updateTime
        from message
        where
            id = #{msgId}
    </select>
    
    <insert id="saveMsg" useGeneratedKeys="true" keyProperty="id">
        insert into message(room_id, from_uid, content, reply_msg_id, type, extra, status, gap_count, create_time, update_time)
        values (#{roomId}, #{fromUid}, #{content}, #{replyMsgId}, #{type},#{extra},#{status},#{gapCount},#{createTime},#{updateTime})
    </insert>

    <update id="updateById">
        update `message`
        set update_time = now()
            <if test="roomId != null">
                , room_id = #{roomId}
            </if>
            <if test="fromUid != null">
                , from_uid = #{fromUid}
            </if>
            <if test="replyMsgId != null">
                ,reply_msg_id = #{replyMsgId}
            </if>
            <if test="type != null">
                ,type = #{type}
            </if>
            <if test="extra != null">
                ,extra = #{extra}
            </if>
            <if test="status != null">
                ,status = #{status}
            </if>
            <if test="gapCount != null">
                ,gap_count = #{gapCount}
            </if>
        where id = #{id}
    </update>
 
    <select id="selectMaxId" resultType="int">
        select
            ifnull(max(id), 0)
        from message
        where
            room_id = #{roomId}
    </select>
    <select id="selectMinId" resultType="int">
        select
            ifnull(min(id), 0)
        from message
        where
            room_id = #{roomId}
    </select>


    <update id="updateRead">
        update message
        set `read` = 1
        where room_id = #{roomId}
        <if test="type != null and type == 1">
            and from_user = #{uid}
        </if>
    </update>
</mapper>